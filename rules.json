{
  "rules": {
    "queue": {
      "invites": {
        "$queueInvite": {
          ".validate": "newData.hasChildren(['_state', '_state_changed', '_owner', '_progress', '_error_details', '_id', 'groupName', 'inviter', 'invitee'])",
          "_state": {
            ".validate": "newData.isString()"
          },
          "_state_changed": {
            ".validate": "newData.isNumber() && (data.parent().val() == null ? newData.val() == now : data.val() == newData.val())"
          },
          "_owner": {
            ".validate": "newData.isString()"
          },
          "_progress": {
            ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 100"
          },
          "_error_details": {
            ".validate": "newData.hasChildren(['error', 'error_stack', 'previous_state', 'original_task', 'attempts'])",
            "error": {
              ".validate": "newData.isString()"
            },
            "error_stack": {
              ".validate": "newData.isString()"
            },
            "previous_state": {
              ".validate": "newData.isString()"
            },
            "attempts": {
              ".validate": "newData.isNumber() && newData.val() >= 0"
            },
            "$other": {
              ".validate": "false"
            }
          },
          "_id": {
            ".validate": "newData.isString()"
          },
          "groupName": {
            ".validate": "newData.isString()"
          },
          "inviter": {
            ".validate": "newData.isString()"
          },
          "invitee": {
            ".validate": "newData.isString()"
          },
          "$other": {
            ".validate": "false"
          },
          ".write": "data.val() == null && (auth != null || auth.canProcessTasks == true) || data.val() != null && newData.val() != null && auth.canProcessTasks == true || data.val() != null && newData.val() == null && auth.canProcessTasks == true",
          ".read": "auth.canProcessTasks == true",
          ".indexOn": [
            "_state"
          ]
        }
      }
    },
    "participants": {
      "$userId": {
        ".validate": "newData.hasChildren(['country', 'id', 'ext_url', 'uri', 'image_url'])",
        "country": {
          ".validate": "newData.isString()"
        },
        "online": {
          ".validate": "newData.isBoolean() || newData.val() == null"
        },
        "display_name": {
          ".validate": "newData.isString() || newData.val() == null"
        },
        "id": {
          ".validate": "newData.isString()"
        },
        "ext_url": {
          ".validate": "newData.isString()"
        },
        "uri": {
          ".validate": "newData.isString()"
        },
        "image_url": {
          ".validate": "newData.isString()"
        },
        "$other": {
          ".validate": "false"
        },
        ".read": "auth != null",
        ".write": "auth != null && auth.uid == $userId"
      }
    },
    "users": {
      "$userId": {
        ".validate": "newData.hasChildren(['email', 'product', 'type'])",
        "cur_group": {
          ".validate": "newData.isString() || newData.val() == null",
          ".read": "auth != null && data.parent().child('cur_group_visible').val() == true"
        },
        "cur_group_visible": {
          ".validate": "newData.isBoolean() || newData.val() == null"
        },
        "email": {
          ".validate": "newData.isString()"
        },
        "product": {
          ".validate": "newData.isString()"
        },
        "type": {
          ".validate": "newData.isString()"
        },
        "devices": {
          "$key1": {
            ".validate": "newData.hasChildren(['name', 'added', 'lastActive', 'gcmId', 'type']) && newData.child('gcmId').val() == $key1 && (newData.child('type').val() == 'ios' || newData.child('type').val() == 'android' || newData.child('type').val() == 'web')",
            "name": {
              ".validate": "newData.isString()"
            },
            "added": {
              ".validate": "newData.isNumber() && (data.parent().val() == null ? newData.val() == now : data.val() == newData.val())"
            },
            "lastActive": {
              ".validate": "newData.isNumber() && newData.val() == now"
            },
            "gcmId": {
              ".validate": "newData.isString()"
            },
            "type": {
              ".validate": "newData.isString()"
            },
            "$other": {
              ".validate": "false"
            }
          },
          ".read": "auth.canProcessTasks == true"
        },
        "friends": {
          "$key2": {
            ".validate": "newData.isBoolean()"
          }
        },
        "$other": {
          ".validate": "false"
        },
        ".read": "auth != null && auth.uid == $userId",
        ".write": "auth != null && auth.uid == $userId"
      }
    },
    "queuegroups": {
      "$id": {
        ".validate": "newData.hasChildren(['created', 'leader', 'name']) && newData.child('name').val() == $id",
        "created": {
          ".validate": "newData.isNumber() && newData.val() == now"
        },
        "leader": {
          ".validate": "newData.isString()",
          ".write": "auth.uid == root.child('queuegroups').child($id).child('leader').val()"
        },
        "name": {
          ".validate": "newData.isString()",
          ".read": "auth != null",
          ".write": "auth.uid == root.child('queuegroups').child($id).child('leader').val()"
        },
        "public": {
          ".validate": "newData.isBoolean() || newData.val() == null"
        },
        "security": {
          ".validate": "newData.hasChildren() && newData.hasChildren(['type']) && (newData.child('type').val() == 'invite' || newData.child('type').val() == 'password') || newData.val() == null",
          "type": {
            ".validate": "newData.isString()"
          },
          "password": {
            ".validate": "newData.isString() || newData.val() == null"
          },
          "$other": {
            ".validate": "false"
          }
        },
        "participants": {
          "$key3": {
            ".validate": "newData.isBoolean() || newData.isString()",
            ".write": "data.val() == null && $key3 == auth.uid && (root.child('queuegroups').child($id).child('security').val() == null ? true : root.child('queuegroups').child($id).child('security').child('type').val() == 'invite' ? root.child('queuegroups').child($id).child('invites').child($key3).val() != null : root.child('queuegroups').child($id).child('security').child('type').val() == 'password' ? newData.val() == root.child('queuegroups').child($id).child('security').child('password').val() : false) || data.val() != null && newData.val() != null && ($key3 == auth.uid || auth.uid == root.child('queuegroups').child($id).child('leader').val()) || data.val() != null && newData.val() == null && ($key3 == auth.uid || auth.uid == root.child('queuegroups').child($id).child('leader').val())",
            ".read": "data.parent().child('public').val() == true || root.child('queuegroups').child($id).child('participants').child(auth.uid).val() != null"
          }
        },
        "invites": {
          "$key2": {
            ".validate": "newData.isBoolean()"
          },
          ".read": "auth != null",
          ".write": "root.child('queuegroups').child($id).child('participants').child(auth.uid).val() != null"
        },
        "tracks": {
          "$key4": {
            ".validate": "newData.hasChildren(['added', 'album', 'artist', 'key', 'lengthMs', 'songId', 'title', 'uri'])",
            "added": {
              ".validate": "newData.isNumber()"
            },
            "album": {
              ".validate": "newData.isString()"
            },
            "albumArtSmall": {
              ".validate": "newData.isString() || newData.val() == null"
            },
            "albumArtMedium": {
              ".validate": "newData.isString() || newData.val() == null"
            },
            "albumArtLarge": {
              ".validate": "newData.isString() || newData.val() == null"
            },
            "artist": {
              ".validate": "newData.isString()"
            },
            "key": {
              ".validate": "newData.isString()"
            },
            "lengthMs": {
              ".validate": "newData.isNumber()"
            },
            "songId": {
              ".validate": "newData.isString()"
            },
            "title": {
              ".validate": "newData.isString()"
            },
            "uri": {
              ".validate": "newData.isString()"
            },
            "votedUp": {
              "$key2": {
                ".validate": "newData.isBoolean()"
              }
            },
            "votedDown": {
              "$key2": {
                ".validate": "newData.isBoolean()"
              }
            },
            "$other": {
              ".validate": "false"
            }
          },
          ".write": "root.child('queuegroups').child($id).child('participants').child(auth.uid).val() != null"
        },
        "pastTracks": {
          "$key4": {
            ".validate": "newData.hasChildren(['added', 'album', 'artist', 'key', 'lengthMs', 'songId', 'title', 'uri'])",
            "added": {
              ".validate": "newData.isNumber()"
            },
            "album": {
              ".validate": "newData.isString()"
            },
            "albumArtSmall": {
              ".validate": "newData.isString() || newData.val() == null"
            },
            "albumArtMedium": {
              ".validate": "newData.isString() || newData.val() == null"
            },
            "albumArtLarge": {
              ".validate": "newData.isString() || newData.val() == null"
            },
            "artist": {
              ".validate": "newData.isString()"
            },
            "key": {
              ".validate": "newData.isString()"
            },
            "lengthMs": {
              ".validate": "newData.isNumber()"
            },
            "songId": {
              ".validate": "newData.isString()"
            },
            "title": {
              ".validate": "newData.isString()"
            },
            "uri": {
              ".validate": "newData.isString()"
            },
            "votedUp": {
              "$key2": {
                ".validate": "newData.isBoolean()"
              }
            },
            "votedDown": {
              "$key2": {
                ".validate": "newData.isBoolean()"
              }
            },
            "$other": {
              ".validate": "false"
            }
          },
          ".write": "auth.uid == root.child('queuegroups').child($id).child('leader').val()"
        },
        "nowPlaying": {
          ".validate": "newData.hasChildren() && newData.hasChildren(['added', 'album', 'artist', 'key', 'lengthMs', 'songId', 'title', 'uri']) || newData.val() == null",
          "added": {
            ".validate": "newData.isNumber()"
          },
          "album": {
            ".validate": "newData.isString()"
          },
          "albumArtSmall": {
            ".validate": "newData.isString() || newData.val() == null"
          },
          "albumArtMedium": {
            ".validate": "newData.isString() || newData.val() == null"
          },
          "albumArtLarge": {
            ".validate": "newData.isString() || newData.val() == null"
          },
          "artist": {
            ".validate": "newData.isString()"
          },
          "key": {
            ".validate": "newData.isString()"
          },
          "lengthMs": {
            ".validate": "newData.isNumber()"
          },
          "songId": {
            ".validate": "newData.isString()"
          },
          "title": {
            ".validate": "newData.isString()"
          },
          "uri": {
            ".validate": "newData.isString()"
          },
          "votedUp": {
            "$key2": {
              ".validate": "newData.isBoolean()"
            }
          },
          "votedDown": {
            "$key2": {
              ".validate": "newData.isBoolean()"
            }
          },
          "$other": {
            ".validate": "false"
          },
          ".read": "data.parent().child('public').val() == true || root.child('queuegroups').child($id).child('participants').child(auth.uid).val() != null",
          ".write": "true"
        },
        "$other": {
          ".validate": "false"
        },
        ".write": "data.val() == null && auth != null || data.val() != null && newData.val() != null && auth.uid == root.child('queuegroups').child($id).child('leader').val() || data.val() != null && newData.val() == null && auth.uid == root.child('queuegroups').child($id).child('leader').val()",
        ".read": "root.child('queuegroups').child($id).child('participants').child(auth.uid).val() != null"
      }
    }
  }
}
